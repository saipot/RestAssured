pipeline {
    agent any
	 
    tools {  
     maven 'maven_3.6.2'  
    } 
    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout'
            }
        }
        stage('Build') {
            steps {
                echo 'Clean Build'
                bat 'mvn clean compile'
            }
        }
       
	stage('Test') {
            steps {
	    
			  echo 'testing'
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        bat 'mvn test'
                    }
                }
            }
        }
       
        stage('Package') {
            steps {
                echo 'Packaging'
                bat 'mvn package -DskipTests'
            }
        }
        stage('Deploy') {
            steps {
                echo '## TODO DEPLOYMENT ##'
            }
	    }
	   	stage('reports') {
           steps {
            step([$class: 'Publisher', reportFilenamePattern: '**/testng-results.xml'])
			archiveArtifacts artifacts: 'target/com.test.restassured-0.0.1-SNAPSHOT.jar', allowEmptyArchive: true
        }
	}
stage('Email notification') {
steps{
mail (to: 'sailu.kaushik@gmail.com',
 subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) is waiting for input",
         body: "Please go to ${env.BUILD_URL}.");
   input 'Ready to go?';   
   
   timeout(time: 3, unit: 'HOURS') {
                    
                }
 }
}
} 

   post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}
